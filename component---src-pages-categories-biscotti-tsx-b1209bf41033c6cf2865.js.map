{"version":3,"sources":["webpack:///./src/components/ProductPage/ProductView/ProductView.module.css","webpack:///./src/components/ProductPage/ProductView/ProductView.tsx","webpack:///./src/pages/categories/biscotti.tsx"],"names":["module","exports","ProductView","props","style","backgroundColor","bcgColor","width","height","zIndex","display","justifyContent","alignItems","maxWidth","marginBottom","fluid","fluidImg","alt","className","classes","textWrapper","title","description","ingredients","conservation","BiscottiPage","biscotti","useProductQuery","allSanityProduct","edges","filter","p","node","category","page","pages","scrolling","ref","position","factor","speed","LayoutHeader","left","right","top","Centralizer","marginLeft","Quote","textAlign","bottom","QuoteStyle","header","PageTitle","map","console","log","key","id","backGroundColor","hex","productPhoto","asset","marginTop"],"mappings":"8EACAA,EAAOC,QAAU,CAAC,YAAc,2C,gMC8BjBC,EAjBK,SAACC,GACnB,OACE,yBAAKC,MAAO,CAAEC,gBAAiBF,EAAMG,SAAUC,MAAO,OAAQC,OAAQ,QAASC,OAAQ,IAAKC,QAAS,OAAQC,eAAgB,eAAgBC,WAAW,WACtJ,yBAAKR,MAAO,CAAES,SAAU,QAASN,MAAO,QAASC,OAAQ,QAASM,aAAc,SAC9E,kBAAC,IAAD,CAAKC,MAAOZ,EAAMa,SAAUC,IAAI,mBAElC,yBAAKC,UAAWC,IAAQC,aACtB,8BAAOjB,EAAMkB,OACb,8BAAOlB,EAAMmB,aACb,8BAAOnB,EAAMoB,aACb,8BAAOpB,EAAMqB,iBC8CNC,UA3DgB,WAC7B,IACMC,EADyBC,cACWC,iBAAiBC,MAAMC,QAAO,SAACC,GAAD,MAAyC,YAAzBA,EAAEC,KAAKC,SAASZ,SACpGa,EAAO,EAIX,OACE,kBAAC,WAAD,CAAUC,MAAO,IAAKC,WAAW,EAAMC,IAAK,SAAAA,GAAG,OAAeA,IAG5D,yBAAKjC,MAAO,CAAEC,gBAAiB,UAAWE,MAAO,OAAQC,OAAQ,QAASC,QAAS,IAAK6B,SAAU,aAChG,kBAAC,gBAAD,CAAeC,OAAQ,EAAGC,OAAQ,GAChC,kBAACC,EAAA,EAAD,MACA,6BAASrC,MAAO,CAAEkC,SAAU,WAAYI,KAAM,IAAKC,MAAO,IAAKC,IAAK,IAAKpC,OAAQ,UAC/E,kBAACqC,EAAA,EAAD,KACE,yBAAKzC,MAAO,CAAEkC,SAAU,WAAY/B,MAAO,OAAQqC,IAAK,OAAQE,WAAY,SAC1E,kBAACC,EAAA,EAAD,oKAGJ,yBAAK3C,MAAO,CAAEkC,SAAU,WAAY/B,MAAO,MAAOuC,WAAY,OAAQE,UAAW,SAAUC,OAAQ,SACjG,kBAACF,EAAA,EAAD,CAAO3C,MAAO8C,IAAWC,QAAzB,MAEF,yBAAK/C,MAAO,CAAEkC,SAAU,WAAYK,MAAO,OAAQM,OAAQ,SACzD,kBAACG,EAAA,EAAD,qBAMP1B,EAAS2B,KAAI,SAACtB,GAGb,OAFAuB,QAAQC,IAAIxB,EAAEC,KAAKX,OACnBa,IAEE,6BAAS9B,MAAO,CAAEkC,SAAU,WAAY/B,MAAO,OAAQC,OAAQ,SAAWgD,IAAKzB,EAAEC,KAAKyB,IACpF,kBAAC,gBAAD,CAAelB,OAAQL,EAAMM,MAAON,EAAO,IACzC,kBAAC,EAAD,CACE5B,SAAUyB,EAAEC,KAAK0B,gBAAgBC,IACjC3C,SAAUe,EAAEC,KAAK4B,aAAaC,MAAM9C,MACpCM,MAAOU,EAAEC,KAAKX,MACdC,YAAaS,EAAEC,KAAKV,YACpBE,aAAcO,EAAEC,KAAKR,aACrBD,YAAaQ,EAAEC,KAAKT,mBAM7BW,IACD,6BAAS9B,MAAO,CAAEkC,SAAU,WAAY/B,MAAO,OAAQC,OAAQ,QAASsD,UAAW,SACjF,kBAAC,gBAAD,CAAevB,OAAQL,EAAMM,MAAON,EAAO,IACzC,yBAAK9B,MAAO,CAAEC,gBAAiB,QAASE,MAAO,OAAQC,OAAQ,QAASC,OAAQ","file":"component---src-pages-categories-biscotti-tsx-b1209bf41033c6cf2865.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"textWrapper\":\"ProductView-module--textWrapper--8-aF7\"};","import React, { FC } from 'react';\r\nimport Img from 'gatsby-image';\r\nimport Centralizer from '../../StructureComponents/Centralizer/Centralizer';\r\nimport classes from './ProductView.module.css';\r\n\r\ninterface pageProps {\r\n  bcgColor: string,\r\n  fluidImg: any,\r\n  title: string,\r\n  description: string,\r\n  ingredients: string,\r\n  conservation: string\r\n}\r\n\r\nconst ProductView = (props: pageProps) => {\r\n  return (\r\n    <div style={{ backgroundColor: props.bcgColor, width: \"100%\", height: \"100vh\", zIndex: 100, display: \"flex\", justifyContent: \"space-evenly\", alignItems:\"center\" }}>\r\n      <div style={{ maxWidth: \"400px\", width: \"300px\", height: \"400px\", marginBottom: \"10vh\" }}>\r\n        <Img fluid={props.fluidImg} alt=\"product photo\" />\r\n      </div>\r\n      <div className={classes.textWrapper}>\r\n        <span>{props.title}</span>\r\n        <span>{props.description}</span>\r\n        <span>{props.ingredients}</span>\r\n        <span>{props.conservation}</span>\r\n      </div>\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProductView;","import React from 'react';\r\nimport { Parallax, ParallaxLayer } from 'react-spring/renderprops-addons';\r\nimport { Product, ProductQuery, QuoteStyle } from '../../../types';\r\nimport LayoutHeader from '../../components/LayoutHeader/LayoutHeader';\r\nimport PageTitle from '../../components/PageTitle/PageTitle';\r\nimport Quote from '../../components/Quote/Quote';\r\nimport Centralizer from '../../components/StructureComponents/Centralizer/Centralizer';\r\nimport { useProductQuery } from '../../hooks/queries/useProductQuery';\r\nimport Img from 'gatsby-image';\r\nimport ProductView from '../../components/ProductPage/ProductView/ProductView';\r\n\r\nconst BiscottiPage: React.FC = () => {\r\n  const products: ProductQuery = useProductQuery();\r\n  const biscotti: Array<Product> = products.allSanityProduct.edges.filter((p: Product) => p.node.category.title == \"Biscotti\");\r\n  let page = 0;\r\n\r\n  let parallax;\r\n\r\n  return (\r\n    <Parallax pages={3.4} scrolling={true} ref={ref => parallax = ref}>\r\n\r\n      {/* ------------HEADER SECTION */}\r\n      <div style={{ backgroundColor: \"#F0E9E4\", width: \"100%\", height: \"100vh\", zIndex: -100, position: \"relative\" }}>\r\n        <ParallaxLayer factor={0} speed={-1}>\r\n          <LayoutHeader />\r\n          <section style={{ position: \"absolute\", left: \"0\", right: \"0\", top: \"0\", height: \"100vh\" }}>\r\n            <Centralizer>\r\n              <div style={{ position: \"absolute\", width: \"55vw\", top: \"45vh\", marginLeft: \"25vw\" }}>\r\n                <Quote>Le materie prime utilizzate per i nostri prodotti provengono dalle ricche e generose terre campane che offrono eccellenze riconosciute in tutto il mondo.</Quote>\r\n              </div>\r\n            </Centralizer>\r\n            <div style={{ position: \"absolute\", width: \"6em\", marginLeft: \"10vw\", textAlign: \"center\", bottom: \"30vh\" }}>\r\n              <Quote style={QuoteStyle.header}>B</Quote>\r\n            </div>\r\n            <div style={{ position: \"absolute\", right: \"20vw\", bottom: \"15vh\" }}>\r\n              <PageTitle>Biscotti</PageTitle>\r\n            </div>\r\n          </section>\r\n        </ParallaxLayer>\r\n      </div>\r\n\r\n      {biscotti.map((p: Product) => {\r\n        console.log(p.node.title);\r\n        page++;\r\n        return (\r\n          <section style={{ position: \"relative\", width: \"100%\", height: \"100vh\" }} key={p.node.id} >\r\n            <ParallaxLayer factor={page} speed={page / 10}>\r\n              <ProductView\r\n                bcgColor={p.node.backGroundColor.hex}\r\n                fluidImg={p.node.productPhoto.asset.fluid}\r\n                title={p.node.title}\r\n                description={p.node.description}\r\n                conservation={p.node.conservation}\r\n                ingredients={p.node.ingredients}\r\n              />\r\n            </ParallaxLayer>\r\n          </section>\r\n        )\r\n      })}\r\n      {page++}\r\n      <section style={{ position: \"relative\", width: \"100%\", height: \"100vh\", marginTop: \"30vh\" }} >\r\n        <ParallaxLayer factor={page} speed={page / 10}>\r\n          <div style={{ backgroundColor: \"white\", width: \"100%\", height: \"100vh\", zIndex: 100 }}>\r\n          </div>\r\n        </ParallaxLayer>\r\n      </section>\r\n    </Parallax >\r\n  )\r\n}\r\n\r\nexport default BiscottiPage;"],"sourceRoot":""}